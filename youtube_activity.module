<?php

function youtube_activity_permission() {
  return array(
    'administer youtube activity' => array(
      'title' => t('Administer youtube activity'),
      'description' => t('Perform administration tasks for youtube activity.'),
    ),
  );
}


function youtube_activity_menu() {
  $items["admin/structure/youtube_activity"] = array(
    'title' => 'Yotube parameters',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('youtube_activity_form',),
    'access arguments' => array('administer youtube activity'),
  );
$items["retrieve_youtube_activity"] = array(
    'title' => 'Yotube parameters',
    'page callback' => 'retrieve_youtube_activity',
    'page arguments' => array(),
    'access arguments' => array('administer youtube activity'),
  );



  return $items;
}

function youtube_activity_form(){
    $form['you_api_key'] = array(
      '#type' => 'textfield', 
      '#title' => t('API KEY'), 
      '#default_value' => variable_get('you_api_key',''), 
      '#description' => "get from https://console.developers.google.com", 
      '#size' => 60, 
      '#maxlength' => 255, 
      '#required' => TRUE,

    );
    $form['you_channel_id'] = array(
      '#type' => 'textfield', 
      '#title' => t('Chanel IDs'), 
      '#default_value' => variable_get('you_channel_id',''), 
      '#description' => "comma separated", 
      '#size' => 60, 
      '#maxlength' => 255, 
      '#required' => TRUE,

    );

    $form['you_max_retrieve_data'] = array(
      '#type' => 'textfield', 
      '#title' => t('Max retrieve data'), 
      '#default_value' => variable_get('you_max_retrieve_data','50'), 
      '#size' => 60, 
      '#maxlength' => 255, 
      '#required' => TRUE,

    );

  return system_settings_form($form);
}
function retrieve_youtube_activity(){
    $data=array('key'=> variable_get('you_api_key',''),'part'=>'snippet,id,contentDetails','maxResults'=>variable_get('you_max_retrieve_data','50'));
    $channel_id=variable_get('you_channel_id',false);
    $channels=explode(',', $channel_id);
    $return="";
    foreach ($channels as $channel) {
      $data['channelId']=$channel;
      $return.=$channel;
      _get_ytb_data($data);
    }


  
return $return;
}

function _get_ytb_data($data){
  $full_url = url('https://www.googleapis.com/youtube/v3/activities', array('query' => $data));
  echo $full_url ."<br>";
    $result = drupal_http_request($full_url);
    $result_set=json_decode($result->data);
    foreach ($result_set->items as $key => $item) {
      if(@$item->type!='upload') continue;
        db_merge('activities')
      ->key(array('id' => $item->contentDetails->upload->videoId))
      ->fields(array(
            'id' => $item->contentDetails->upload->videoId,
            'type' => $item->snippet->type,
            'title' => $item->snippet->title,
            'description' => $item->snippet->description,
            'type' => $item->snippet->type,
            'channelId' => $item->snippet->channelId,
            'json' => json_encode($item),
            'publishedAt' => strtotime($item->snippet->publishedAt),
            'status' => 1,
            'transaction_time' => time()
      ))
      ->execute();
    }


}
function youtube_activity_cron(){
  retrieve_youtube_activity();  
}
function youtube_activity_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'youtube_activity') . '/views',
  );
}

function youtube_activity_views_default_views() {

  $view = new view();
$view->name = 'videos';
$view->description = '';
$view->tag = 'default';
$view->base_table = 'activities';
$view->human_name = 'videos';
$view->core = 7;
$view->api_version = '3.0';
$view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

/* Display: Master */
$handler = $view->new_display('default', 'Master', 'default');
$handler->display->display_options['title'] = 'Videos';
$handler->display->display_options['use_more_always'] = FALSE;
$handler->display->display_options['use_more_text'] = 'm치s';
$handler->display->display_options['access']['type'] = 'none';
$handler->display->display_options['cache']['type'] = 'none';
$handler->display->display_options['query']['type'] = 'views_query';
$handler->display->display_options['exposed_form']['type'] = 'basic';
$handler->display->display_options['exposed_form']['options']['submit_button'] = 'Aplicar';
$handler->display->display_options['exposed_form']['options']['reset_button_label'] = 'Reiniciar';
$handler->display->display_options['exposed_form']['options']['exposed_sorts_label'] = 'Ordenar por';
$handler->display->display_options['pager']['type'] = 'some';
$handler->display->display_options['pager']['options']['items_per_page'] = '10';
$handler->display->display_options['style_plugin'] = 'default';
$handler->display->display_options['row_plugin'] = 'fields';
/* Campo: yotutube: Id Youtube */
$handler->display->display_options['fields']['id']['id'] = 'id';
$handler->display->display_options['fields']['id']['table'] = 'activities';
$handler->display->display_options['fields']['id']['field'] = 'id';
$handler->display->display_options['fields']['id']['label'] = '';
$handler->display->display_options['fields']['id']['exclude'] = TRUE;
$handler->display->display_options['fields']['id']['element_label_colon'] = FALSE;
/* Campo: yotutube: Json element */
$handler->display->display_options['fields']['json']['id'] = 'json';
$handler->display->display_options['fields']['json']['table'] = 'activities';
$handler->display->display_options['fields']['json']['field'] = 'json';
$handler->display->display_options['fields']['json']['label'] = '';
$handler->display->display_options['fields']['json']['alter']['make_link'] = TRUE;
$handler->display->display_options['fields']['json']['alter']['path'] = 'videos/[id]';
$handler->display->display_options['fields']['json']['element_label_colon'] = FALSE;
/* Campo: yotutube: Titulo */
$handler->display->display_options['fields']['title']['id'] = 'title';
$handler->display->display_options['fields']['title']['table'] = 'activities';
$handler->display->display_options['fields']['title']['field'] = 'title';
$handler->display->display_options['fields']['title']['label'] = '';
$handler->display->display_options['fields']['title']['alter']['make_link'] = TRUE;
$handler->display->display_options['fields']['title']['alter']['path'] = 'videos/[id]';
$handler->display->display_options['fields']['title']['element_type'] = 'strong';
$handler->display->display_options['fields']['title']['element_label_colon'] = FALSE;
/* Criterio de ordenaci칩n: yotutube: Pubicado */
$handler->display->display_options['sorts']['publishedAt']['id'] = 'publishedAt';
$handler->display->display_options['sorts']['publishedAt']['table'] = 'activities';
$handler->display->display_options['sorts']['publishedAt']['field'] = 'publishedAt';
$handler->display->display_options['sorts']['publishedAt']['order'] = 'DESC';

/* Display: Block */
$handler = $view->new_display('block', 'Block', 'block');
$handler->display->display_options['block_description'] = 'Videos';

/* Display: P치gina */
$handler = $view->new_display('page', 'P치gina', 'page_1');
$handler->display->display_options['defaults']['fields'] = FALSE;
/* Campo: yotutube: Id Youtube */
$handler->display->display_options['fields']['id']['id'] = 'id';
$handler->display->display_options['fields']['id']['table'] = 'activities';
$handler->display->display_options['fields']['id']['field'] = 'id';
$handler->display->display_options['fields']['id']['label'] = '';
$handler->display->display_options['fields']['id']['exclude'] = TRUE;
$handler->display->display_options['fields']['id']['element_label_colon'] = FALSE;
/* Campo: yotutube: Titulo */
$handler->display->display_options['fields']['title']['id'] = 'title';
$handler->display->display_options['fields']['title']['table'] = 'activities';
$handler->display->display_options['fields']['title']['field'] = 'title';
$handler->display->display_options['fields']['title']['label'] = '';
$handler->display->display_options['fields']['title']['alter']['make_link'] = TRUE;
$handler->display->display_options['fields']['title']['alter']['path'] = 'videos/[id]';
$handler->display->display_options['fields']['title']['element_type'] = 'strong';
$handler->display->display_options['fields']['title']['element_label_colon'] = FALSE;
/* Campo: yotutube: Json element */
$handler->display->display_options['fields']['json']['id'] = 'json';
$handler->display->display_options['fields']['json']['table'] = 'activities';
$handler->display->display_options['fields']['json']['field'] = 'json';
$handler->display->display_options['fields']['json']['label'] = '';
$handler->display->display_options['fields']['json']['alter']['make_link'] = TRUE;
$handler->display->display_options['fields']['json']['alter']['path'] = 'videos/[id]';
$handler->display->display_options['fields']['json']['element_label_colon'] = FALSE;
$handler->display->display_options['fields']['json']['element'] = 'player';
$handler->display->display_options['defaults']['arguments'] = FALSE;
/* Filtro contextual: yotutube: Id Youtube */
$handler->display->display_options['arguments']['id']['id'] = 'id';
$handler->display->display_options['arguments']['id']['table'] = 'activities';
$handler->display->display_options['arguments']['id']['field'] = 'id';
$handler->display->display_options['arguments']['id']['exception']['title'] = 'Todo(s)';
$handler->display->display_options['arguments']['id']['default_argument_type'] = 'fixed';
$handler->display->display_options['arguments']['id']['summary']['number_of_records'] = '0';
$handler->display->display_options['arguments']['id']['summary']['format'] = 'default_summary';
$handler->display->display_options['arguments']['id']['summary_options']['items_per_page'] = '25';
$handler->display->display_options['arguments']['id']['limit'] = '0';
$handler->display->display_options['path'] = 'videos/%';
$translatables['videos'] = array(
  t('Master'),
  t('Videos'),
  t('m치s'),
  t('Aplicar'),
  t('Reiniciar'),
  t('Ordenar por'),
  t('Asc'),
  t('Desc'),
  t('Block'),
  t('P치gina'),
  t('Todo(s)'),
);

}
