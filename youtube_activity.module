<?php

function youtube_activity_perm() {
  return array(
    'administer youtube activity' ,
  );
}


function youtube_activity_menu() {
  $items["admin/structure/youtube_activity"] = array(
    'title' => 'Yotube parameters',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('youtube_activity_form',),
    'access arguments' => array('administer youtube activity'),
  );
$items["retrieve_youtube_activity"] = array(
    'title' => 'Yotube parameters',
    'page callback' => 'retrieve_youtube_activity',
    'page arguments' => array(),
    'access arguments' => array('administer youtube activity'),
  );



  return $items;
}

function youtube_activity_form(){
    $form['you_api_key'] = array(
      '#type' => 'textfield', 
      '#title' => t('API KEY'), 
      '#default_value' => variable_get('you_api_key',''), 
      '#description' => "get from https://console.developers.google.com", 
      '#size' => 60, 
      '#maxlength' => 255, 
      '#required' => TRUE,

    );
    $form['you_channel_id'] = array(
      '#type' => 'textfield', 
      '#title' => t('Chanel IDs'), 
      '#default_value' => variable_get('you_channel_id',''), 
      '#description' => "comma separated", 
      '#size' => 60, 
      '#maxlength' => 255, 
      '#required' => TRUE,

    );

    $form['you_max_retrieve_data'] = array(
      '#type' => 'textfield', 
      '#title' => t('Max retrieve data'), 
      '#default_value' => variable_get('you_max_retrieve_data','50'), 
      '#size' => 60, 
      '#maxlength' => 255, 
      '#required' => TRUE,

    );

  return system_settings_form($form);
}
function retrieve_youtube_activity(){
    $data=array('key'=> variable_get('you_api_key',''),'part'=>'snippet,id,contentDetails','maxResults'=>variable_get('you_max_retrieve_data','50'));
    if($channel=variable_get('you_channel_id',false))$data['channelId']=$channel;
    if(strpos($channel, ',')){
      $channels=explode(',', $channel);
      foreach ($channels as $channel) {
        $data['channelId']=$channel;
        _get_ytb_data($data);
      }



    } else {
      _get_ytb_data($data);
    }

  

}

function _get_ytb_data($data){
  $full_url = url('https://www.googleapis.com/youtube/v3/activities', array('query' => $data));
    $result = drupal_http_request($full_url);
    $result_set=json_decode($result->data);
    foreach ($result_set->items as $key => $item) {
        db_query("INSERT IGNORE activities (id,type,title,descripcion,channelid,json,pubishedAt,status,transaction_time) 
                  values('%s','%s','%s','%s',,'%s','%s',%f,%f,%f)",
            $item->contentDetails->upload->videoId,$item->snippet->type, $item->snippet->title,$item->snippet->channelId,
            json_encode($item),strtotime($item->snippet->publishedAt,1,time()));
    }


}
function youtube_activity_cron(){
  retrieve_youtube_activity();  
}
/*
function youtube_activity_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'youtube_activity') . '/views',
  );
}*/

function youtube_activity_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0] = array(
      'info' => t('Youtube Videos'),
      'status' => 1,
      
    );

    return $blocks;
  }
  else if ($op == 'configure' && $delta == 0) {
    $form['items'] = array(
      '#type' => 'select',
      '#title' => t('Number of items'),
      '#default_value' => variable_get('youtube_activity_block_items', 5),
      '#options' => array("0",'1', '2', '3', '4', '5', 10 =>'10', 15=>'15'),
    );
    return $form;
  }
  else if ($op == 'save' && $delta == 0) {
    variable_set('youtube_activity_block_items', $edit['items']);
  }
  else if ($op == 'view') {
    switch ($delta) {
      case 0:
        // Your module will need to define this function to render the block.
        $block = array(
          'subject' => t('Youtube'),
          'content' => youtube_activity_display_block_1(),
        );
        break;
    }
    return $block;
  }

}


function youtube_activity_display_block_1(){
  $query=db_query('SELECT * from {activities} where type = "upload " limit %f order by pubishedAt desc');
  $first=true;
  while ($item = db_fetch_object($query)){
    if($first){
  
  //    $image='<img src="http://i.ytimg.com/vi/' . $video_id .'/0.jpg" title="'.check_plain($item->title).'">';
        $output ='<iframe id="ytplayer" type="text/html" width="247" height="160"
    src="http://www.youtube.com/embed/'. $item->id .'?autoplay=0"  frameborder="0"/></iframe>';
      $first=false;
    }else {
        $image='<img src="http://i.ytimg.com/vi/' .$item->id .'/1.jpg" width="80" title="'.check_plain($item->title).'">';
        $output .= '<a href="javascript:" onClick="change_youtube_video(\''.$item->id.'\')">'.$image . "</a>\n";  
    }
  }
  return $output;


}